{"version":3,"sources":["panels/Home.js","vars/consts.js","hoc/StorageProvider.js","hook/useStorage.js","panels/Default/Default.js","panels/Profile/SignatureList.js","panels/Profile/MySignatures.js","panels/Profile/Profile.js","panels/NewSignature/NewSignature.js","panels/Privacy/Privacy.js","App.js","index.js"],"names":["Home","id","header","mode","stretched","size","server","declOfNum","n","titles","months","timestampToDays","timestamp","date","Date","getDate","getMonth","getBase64","file","Promise","resolve","reject","reader","FileReader","readAsDataURL","onload","result","onerror","error","StorageContext","createContext","StorageProvider","children","useState","activePanel","setActivePanel","popout","setPopout","fetchedUser","setUser","launchParams","setLaunchParams","defaultParams","setDefaultParams","activeProfile","setActiveProfile","snack","setSnack","hideFriendsPlaceholder","setHideFriendsPlaceholder","alreadySet","setAlreadySet","isMobile","setIsMobile","useEffect","a","bridge","send","user","urlSearchParams","URLSearchParams","window","location","search","params","Object","fromEntries","entries","vk_platform","vk_has_profile_button","vk_profile_button_forbidden","vk_profile_id","Number","openProfile","fetch","method","body","JSON","stringify","req","ok","json","res","default","fetchData","userid","value","Provider","useStorage","useContext","Default","console","log","addToProfile","ttl","style","display","flexDirection","alignItems","justifyContent","textAlign","padding","src","photo_200","marginBottom","marginTop","level","weight","first_name","last_name","color","count","onClick","icon","width","height","action","SignatureList","signatures","share","map","sign","className","disabled","description","datetime","before","_from","photo","after","media","pic","name","text","MySignatures","setSignatures","load","setLoad","user_id","page","left","length","Profile","thisUser","setThisUser","profile","NewSignature","currentTab","setCurrentTab","fileLoad","setFileLoad","signValue","setSignValue","setMedia","setColor","active","setActive","thickness","setThickness","paint","setPaint","loadImage","then","img_base64","badLeave","onClose","goodLeave","post_signature","setTimeout","selected","top","bottom","placeholder","maxLength","onChange","e","currentTarget","sizeY","loading","controlSize","accept","files","onSave","image","type","defaultValue","min","max","Privacy","privacy","view_mode","viewmode","setViewMode","post_mode","postmode","setPostMode","edit_viewmode","local_defaultParams","edit_postmode","multi","data","friends","users","ids","f","App","scheme","setScheme","subscribe","detail","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.2a95097e.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\n\nimport { Panel, PanelHeader, Header, Button, Group, Cell, Div, Avatar } from '@vkontakte/vkui';\n\nconst Home = ({ id }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\n\t\t<Group header={<Header mode=\"secondary\">Navigation Example</Header>}>\n\t\t\t<Div>\n\t\t\t\t<Button stretched size=\"l\" mode=\"secondary\" data-to=\"persik\">\n\t\t\t\t\tShow me the Persik, please\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nexport default Home;\n","export const server = 'https://vkma-vezdekod.326studio.xyz/'\r\n\r\nexport function declOfNum(n, titles) {\r\n    return titles[n%10==1 && n%100!=11 ? 0 : n%10>=2 && n%10<=4 && (n%100<10 || n%100>=20) ? 1 : 2];\r\n}\r\n\r\nconst months = [\r\n    'января',\r\n    'февраля',\r\n    'марта',\r\n    'апреля',\r\n    'мая',\r\n    'июня',\r\n    'июля',\r\n    'августа',\r\n    'сентября',\r\n    'октября',\r\n    'ноября',\r\n    'декабря'\r\n]\r\n\r\nexport const timestampToDays = (timestamp) => {\r\n    let date = new Date(timestamp*1000)\r\n    return `${date.getDate()} ${months[date.getMonth()]}`\r\n}\r\n\r\nexport function getBase64(file) {\r\n    return new Promise((resolve, reject) => {\r\n        var reader = new FileReader();\r\n        reader.readAsDataURL(file);\r\n        reader.onload = function () {\r\n            resolve(reader.result);\r\n        };\r\n        reader.onerror = function (error) {\r\n            reject()\r\n        };\r\n    })\r\n }","import { ScreenSpinner } from \"@vkontakte/vkui\"\r\nimport { useState, useEffect, createContext } from \"react\"\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { server } from \"../vars/consts\";\r\n\r\nexport const StorageContext  = createContext(null)\r\n\r\nconst StorageProvider = ({children}) => {\r\n\r\n    const [activePanel, setActivePanel] = useState('default')\r\n    const [popout, setPopout] = useState(<ScreenSpinner size=\"large\"/>)\r\n    const [fetchedUser, setUser] = useState(null);\r\n    const [launchParams, setLaunchParams] = useState(null)\r\n    const [defaultParams, setDefaultParams] = useState(null)\r\n    const [activeProfile, setActiveProfile] = useState(null)\r\n    const [snack, setSnack] = useState(null)\r\n    const [hideFriendsPlaceholder, setHideFriendsPlaceholder] = useState(false)\r\n    const [alreadySet, setAlreadySet] = useState(true)\r\n    const [isMobile, setIsMobile] = useState(false)\r\n\r\n    useEffect(() => {\r\n\r\n\t\tasync function fetchData() {\r\n\t\t\tconst user = await bridge.send('VKWebAppGetUserInfo');\r\n\t\t\tsetUser(user);\r\n\r\n            let urlSearchParams = new URLSearchParams(window.location.search);\r\n            let params = Object.fromEntries(urlSearchParams.entries());\r\n            setLaunchParams(params)\r\n\r\n            if(params.vk_platform == 'mobile_android' || params.vk_platform == 'mobile_iphone'){\r\n                setIsMobile(true)\r\n            }\r\n\r\n            if(params.vk_has_profile_button != '1'){\r\n                setAlreadySet(false)\r\n            }\r\n\r\n            if(params.vk_profile_button_forbidden == '1'){\r\n                setAlreadySet(false)\r\n            }\r\n\r\n            if(params.vk_profile_id && Number(params.vk_profile_id)){\r\n                if(Number(params.vk_profile_id) != user.id){\r\n                    openProfile(Number(params.vk_profile_id))\r\n                }\r\n            }else{\r\n                openProfile(381815538)\r\n            }\r\n\r\n            const req = await fetch(`${server}get_default`, {method:'POST', body:JSON.stringify(\r\n                {\r\n                    params:window.location.search\r\n                }\r\n            )})\r\n            if(req.ok){\r\n                const res = await req.json()\r\n                if(!res.error){\r\n                    setDefaultParams(res.default)\r\n                }\r\n            }\r\n\r\n            setPopout(null);\r\n\t\t}\r\n\r\n\t\tfetchData();\r\n\t}, []);\r\n\r\n    const openProfile = (userid) => {\r\n        setActiveProfile(userid)\r\n        setActivePanel('profile')\r\n    }\r\n\r\n    const value = {\r\n        activePanel, setActivePanel,\r\n        popout, setPopout,\r\n        fetchedUser, defaultParams, launchParams, setDefaultParams,\r\n        activeProfile, openProfile,\r\n        snack, setSnack,\r\n        hideFriendsPlaceholder, setHideFriendsPlaceholder,\r\n        alreadySet, setAlreadySet,\r\n        isMobile\r\n    }\r\n\r\n    return(\r\n        <StorageContext.Provider value = {value}>\r\n            {children}\r\n        </StorageContext.Provider>\r\n    )\r\n}\r\n\r\nexport default StorageProvider","import { useContext } from 'react'\r\nimport { StorageContext } from '../hoc/StorageProvider'\r\n\r\nexport const useStorage = () => {\r\n    return useContext(StorageContext)\r\n}","import { Avatar, Gradient, Group, Panel, PanelHeader, Title, Text, Placeholder, Button } from \"@vkontakte/vkui\"\r\nimport { useStorage } from \"../../hook/useStorage\"\r\nimport { declOfNum } from \"../../vars/consts\"\r\nimport { Icon56CancelCircleOutline, Icon56InfoOutline } from '@vkontakte/icons';\r\nimport bridge from '@vkontakte/vk-bridge';\r\n\r\n\r\nexport const Default = ({ id }) => {\r\n\r\n    let {\r\n        fetchedUser, defaultParams, launchParams,\r\n        setActivePanel, openProfile\r\n    } = useStorage()\r\n\r\n    console.log(fetchedUser)\r\n\r\n    const addToProfile = async () => {\r\n        bridge.send(\"VKWebAppAddToProfile\", {ttl: 0})\r\n    }\r\n\r\n    return(\r\n        <Panel id = {id}>\r\n            {/* <PanelHeader>Подписи</PanelHeader> */}\r\n            <Group>\r\n                {fetchedUser &&\r\n                <Gradient\r\n                style={{\r\n                    // margin: sizeX === SizeType.REGULAR ? \"-7px -7px 0 -7px\" : 0,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    textAlign: \"center\",\r\n                    padding: 32,\r\n                  }}\r\n                >\r\n                    <Avatar size = {96} src = {fetchedUser.photo_200}/>\r\n                    <Title\r\n                    style={{ marginBottom: 8, marginTop: 20 }}\r\n                    level=\"2\"\r\n                    weight=\"2\"\r\n                    >\r\n                        {`${fetchedUser.first_name} ${fetchedUser.last_name}`}\r\n                    </Title>\r\n                    {defaultParams &&\r\n                    <Text style={{ marginBottom: 24, color: \"var(--text_secondary)\" }}>\r\n                        {`У вас ${defaultParams.count} ${declOfNum(defaultParams.count, ['автограф','автографа','автографов'])}`}\r\n                    </Text>\r\n                    }\r\n                    <Button onClick={()=>setActivePanel('my_signatures')} size=\"l\">Мои автографы</Button>\r\n                    <Button mode='tertiary'  onClick={()=>setActivePanel('privacy')} size=\"l\">Приватность</Button>\r\n                </Gradient>\r\n                }\r\n                {launchParams?.vk_has_profile_button != \"1\" &&\r\n                <Group mode=\"card\">\r\n                <Placeholder\r\n                icon = {<Icon56InfoOutline width={48} height = {48}/>}\r\n                action = {<Button\r\n                // onClick = {()=>{openProfile(296223969)}}\r\n                onClick = {addToProfile}\r\n                size = 'm'>Исправить это</Button>}\r\n                >\r\n                    Вы не добавили кнопку приложения в профиль, никто не сможет оставить вам автограф!\r\n                </Placeholder>\r\n                </Group>\r\n                }\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}","import { Icon16Share } from \"@vkontakte/icons\"\r\nimport { Avatar, CardGrid, SimpleCell, Text, Card, IconButton } from \"@vkontakte/vkui\"\r\nimport { useStorage } from \"../../hook/useStorage\"\r\nimport { timestampToDays } from \"../../vars/consts\"\r\nimport './List.css'\r\nimport bridge from \"@vkontakte/vk-bridge\"\r\n\r\nexport const SignatureList = ({ signatures, share = false }) => {\r\n\r\n    let {\r\n        isMobile\r\n    } = useStorage()\r\n\r\n    function shareToHistory(pic){\r\n        if(isMobile){\r\n            bridge.send(\"VKWebAppShowStoryBox\", \r\n            {\r\n                \"background_type\": \"none\",\r\n                \"stickers\": [\r\n                  {\r\n                    \"sticker_type\": \"renderable\",\r\n                    \"sticker\": {\r\n                      \"can_delete\": 0,\r\n                      \"content_type\": \"image\",\r\n                      \"url\": pic,\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            );\r\n        }else{\r\n            bridge.send(\"VKWebAppShowStoryBox\", \r\n            {\r\n                \"background_type\": \"image\",\r\n                \"url\": \"https://sun3-12.userapi.com/impg/f1NJs1KHiykb-kUdZgCVpqu2iSbPGL94DP2TMw/XY7vfzdN1Zc.jpg?size=1440x2160&quality=96&sign=69a2748d55e248e87e0dd837abfabd86&type=album\",\r\n                \"stickers\": [\r\n                  {\r\n                    \"sticker_type\": \"renderable\",\r\n                    \"sticker\": {\r\n                      \"can_delete\": 0,\r\n                      \"content_type\": \"image\",\r\n                      \"url\": pic,\r\n                    }\r\n                  }\r\n                ]\r\n              }\r\n            );\r\n        }\r\n    }\r\n\r\n    return (\r\n        <CardGrid size=\"l\">\r\n            {signatures.map((sign)=>{\r\n                return(\r\n                    <Card\r\n                    key = {`${sign.datetime}`}\r\n                    className = 'card_sign'\r\n                    mode='outline'\r\n                    >\r\n                        <div className = 'card_author_content'>\r\n                            <SimpleCell\r\n                            disabled\r\n                            className=\"cell_card_author_content\"\r\n                            description = {timestampToDays(sign.datetime)}\r\n                            before = { <Avatar size = {36} src = {sign._from.photo} /> }\r\n                            after = {(share && sign.media != '') && <IconButton\r\n                            onClick = {()=>shareToHistory(sign.media)}\r\n                            ><Icon16Share/></IconButton>}\r\n                            >\r\n                                {sign._from.name}\r\n                            </SimpleCell>\r\n                        </div>\r\n                        <div className = 'card_main_content'>\r\n                            {sign.media == '' ? \r\n                            <div className = 'card_main_content_text'>\r\n                                <Text weight=\"3\">\r\n                                    {sign.text}\r\n                                </Text>\r\n                            </div>\r\n                            :\r\n                            <div className = 'card_main_content_media'>\r\n                                <img \r\n                                className = 'media_image'\r\n                                src = {sign.media}\r\n                                />\r\n                            </div>\r\n                            }\r\n                        </div>\r\n                    </Card>\r\n                )\r\n            })}\r\n        </CardGrid>\r\n    )\r\n}","import { Icon56BlockOutline } from \"@vkontakte/icons\"\r\nimport { Group, Panel, PanelHeader, PanelHeaderBack, Placeholder, Spinner } from \"@vkontakte/vkui\"\r\nimport { useState, useEffect } from 'react'\r\nimport { useStorage } from \"../../hook/useStorage\"\r\nimport { SignatureList } from \"./SignatureList\"\r\nimport { server } from \"../../vars/consts\"\r\n\r\nexport const MySignatures = ({id}) => {\r\n    const [signatures, setSignatures] = useState([])\r\n    const [page, setPage] = useState(0)\r\n    const [load, setLoad] = useState(true)\r\n    let {\r\n        fetchedUser,\r\n        setActivePanel\r\n    } = useStorage()\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const req = await fetch(`${server}get_signatures`, {method:'POST', body:JSON.stringify(\r\n                {\r\n                    params:window.location.search,\r\n                    user_id:fetchedUser.id,\r\n                    page:0\r\n                }\r\n            )})\r\n            \r\n            if(req.ok){\r\n                let res = await req.json()\r\n                setSignatures(res.signatures)\r\n            }\r\n\r\n            setLoad(false)\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return(\r\n        <Panel\r\n        id = {id}\r\n        >\r\n            <PanelHeader left = {\r\n                <PanelHeaderBack onClick = {()=>{setActivePanel('default')}}/>\r\n            }>Мои автографы</PanelHeader>\r\n            <Group>\r\n                {load && \r\n                <Spinner size='regular' />\r\n                }\r\n\r\n                {(!load && signatures.length > 0) &&\r\n                <SignatureList signatures={signatures} share = {true}/>\r\n                }\r\n\r\n                {(!load && signatures.length == 0) &&\r\n                <Placeholder\r\n                icon={<Icon56BlockOutline />}\r\n                >\r\n                    У вас нет ни одного автографа\r\n                </Placeholder>\r\n                }\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}","import { Icon56BlockOutline } from \"@vkontakte/icons\"\r\nimport { Group, Panel, Placeholder, Spinner, Gradient, Title, Text, Avatar, Button, PanelHeader, PanelHeaderBack } from \"@vkontakte/vkui\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { useStorage } from \"../../hook/useStorage\"\r\nimport { server, declOfNum } from \"../../vars/consts\"\r\nimport { SignatureList } from \"./SignatureList\"\r\n\r\n\r\nexport const Profile = ({ id }) => {\r\n    const [thisUser, setThisUser] = useState(null)\r\n    const [signatures, setSignatures] = useState([])\r\n    const [load, setLoad] = useState(true)\r\n    const [page, setPage] = useState(0)\r\n    let {\r\n        activeProfile, setActivePanel, snack\r\n    } = useStorage()\r\n\r\n    useEffect(()=>{\r\n        async function fetchData(){\r\n            const req = await fetch(`${server}get_profile`, {method:'POST', body:JSON.stringify(\r\n                {\r\n                    params:window.location.search,\r\n                    user_id:activeProfile\r\n                }\r\n            )})\r\n            if(req.ok){\r\n                let res = await req.json()\r\n                if(!res.error){\r\n                    setSignatures(res.signatures)\r\n                    setThisUser(res.profile)\r\n                    setLoad(false)\r\n                }\r\n            }\r\n        }\r\n\r\n        fetchData()\r\n    }, [])\r\n\r\n    return(\r\n        <Panel id = {id}>\r\n            <PanelHeader\r\n            left = {<PanelHeaderBack onClick={()=>{setActivePanel('default')}}/>}\r\n            >Автографы</PanelHeader>\r\n            <Group>\r\n            {load && \r\n            <Spinner size = 'regular' />\r\n            }\r\n            {(!load && thisUser) && \r\n            <Gradient\r\n                style={{\r\n                    // margin: sizeX === SizeType.REGULAR ? \"-7px -7px 0 -7px\" : 0,\r\n                    display: \"flex\",\r\n                    flexDirection: \"column\",\r\n                    alignItems: \"center\",\r\n                    justifyContent: \"center\",\r\n                    textAlign: \"center\",\r\n                    padding: 32,\r\n                  }}\r\n                >\r\n                    <Avatar size = {96} src = {thisUser.photo}/>\r\n                    <Title\r\n                    style={{ marginBottom: 8, marginTop: 20 }}\r\n                    level=\"2\"\r\n                    weight=\"2\"\r\n                    >\r\n                        {thisUser.name}\r\n                    </Title>\r\n                    {thisUser.count > 0 &&\r\n                    <Text style={{ marginBottom: 24, color: \"var(--text_secondary)\" }}>\r\n                        {`${thisUser.count} ${declOfNum(thisUser.count, ['автограф','автографа','автографов'])}`}\r\n                    </Text>\r\n                    }\r\n                    <Button onClick={()=>setActivePanel('new_signature')} size=\"l\">Оставить автограф</Button>\r\n                </Gradient>\r\n                }\r\n                {(!load && thisUser.count == 0) && \r\n                <Placeholder\r\n                header = 'Пусто'\r\n                icon = {<Icon56BlockOutline />}\r\n                >\r\n                    Здесь нет ни одного автографа\r\n                </Placeholder>\r\n                }\r\n\r\n                {(!load && thisUser.count > 0) && \r\n                <Group mode = 'plain'>\r\n                <SignatureList signatures={signatures} />\r\n                </Group>\r\n                }\r\n            </Group>\r\n            {snack}\r\n        </Panel>\r\n    )\r\n}","import { Icon16BrushOutline, Icon16ImageFilter, Icon16Picture, Icon16Text, Icon24PictureOutline, Icon24TextOutline } from \"@vkontakte/icons\"\r\nimport { Button, FormField, FormItem, FormLayout, Group, Panel, PanelHeader, PanelHeaderBack, Div, Tabs, TabsItem, Textarea, File, Slider, Snackbar, ScreenSpinner } from \"@vkontakte/vkui\"\r\nimport { useState, useEffect } from \"react\"\r\nimport { useStorage } from \"../../hook/useStorage\"\r\nimport { getBase64, server } from \"../../vars/consts\"\r\nimport { Paintable, PaintableRef } from 'paintablejs/react';\r\n\r\nimport styles from './NewSignature.css';\r\n\r\nimport './NewSignature.css'\r\n\r\n\r\nexport const NewSignature = ({ id }) => {\r\n    const [currentTab, setCurrentTab] = useState('text')\r\n    const [fileLoad, setFileLoad] = useState(false)\r\n    let {\r\n        setActivePanel, activeProfile, setSnack, setPopout\r\n    } = useStorage()\r\n\r\n    const [signValue, setSignValue] = useState('')\r\n    const [media, setMedia] = useState(null)\r\n\r\n    const [color, setColor] = useState('#000000')\r\n    const [active, setActive] = useState(true)\r\n    const [thickness, setThickness] = useState(5)\r\n    const [paint, setPaint] = useState(null)\r\n    // const paintableRef = useRef<PaintableRef>(null);\r\n\r\n    const loadImage = async (file) => {\r\n        setFileLoad(true)\r\n        let img_base64 = await getBase64(file).then(res=>{return res})\r\n        setMedia(img_base64)\r\n        setFileLoad(false)\r\n    }\r\n\r\n    const badLeave = () => {\r\n        setActivePanel('profile')\r\n        setSnack(\r\n            <Snackbar\r\n            onClose={()=>{setSnack(null)}}\r\n            >\r\n                Не удалось оставить автограф\r\n            </Snackbar>\r\n        )\r\n    }\r\n\r\n    const goodLeave = () => {\r\n        setActivePanel('profile')\r\n        setSnack(\r\n            <Snackbar\r\n            onClose={()=>{setSnack(null)}}\r\n            >\r\n                Автограф был оставлен\r\n            </Snackbar>\r\n        )\r\n    }\r\n\r\n    const post_signature = async () => {\r\n        setPopout(<ScreenSpinner size=\"large\" />)\r\n        if(currentTab == 'text'){\r\n            const req = await fetch(`${server}add_text_signature`, {method:'POST', body:JSON.stringify(\r\n                {\r\n                    params:window.location.search,\r\n                    user_id:activeProfile,\r\n                    text:signValue\r\n                }\r\n            )})\r\n            if (req.ok) {\r\n                let res = await req.json()\r\n                if(res.error){\r\n                    badLeave()\r\n                }else{\r\n                    goodLeave()\r\n                }\r\n            }else{\r\n                badLeave()\r\n            }\r\n        }else if(currentTab == 'paint'){\r\n            setActive(true)\r\n            setTimeout(async () => {\r\n            console.log(paint)\r\n            const req = await fetch(`${server}add_media_signature`, {method:'POST', body:JSON.stringify(\r\n                {\r\n                    params:window.location.search,\r\n                    user_id:activeProfile,\r\n                    media:paint\r\n                }\r\n            )})\r\n            if (req.ok) {\r\n                let res = await req.json()\r\n                if(res.error){\r\n                    badLeave()\r\n                }else{\r\n                    goodLeave()\r\n                }\r\n            }else{\r\n                badLeave()\r\n            }\r\n            }, 500);\r\n        }else{\r\n            const req = await fetch(`${server}add_media_signature`, {method:'POST', body:JSON.stringify(\r\n                {\r\n                    params:window.location.search,\r\n                    user_id:activeProfile,\r\n                    media:media\r\n                }\r\n            )})\r\n            if (req.ok) {\r\n                let res = await req.json()\r\n                if(res.error){\r\n                    badLeave()\r\n                }else{\r\n                    goodLeave()\r\n                }\r\n            }else{\r\n                badLeave()\r\n            }\r\n        }\r\n\r\n        setPopout(null)\r\n    }\r\n\r\n    useEffect(()=>{console.log(paint)}, [paint])\r\n\r\n    return (\r\n        <Panel id = {id}>\r\n            <PanelHeader left = {\r\n            <PanelHeaderBack\r\n            onClick={()=>{setActivePanel('profile')}}\r\n            />\r\n             }>Отправить автограф</PanelHeader>\r\n            \r\n            <Group>\r\n                <Tabs>\r\n                    <TabsItem\r\n                    selected = {currentTab === 'text'}\r\n                    onClick = {()=>{\r\n                        setActive(false)\r\n                        setTimeout(() => {\r\n                            setCurrentTab('text')\r\n                        }, 80);\r\n                    }}\r\n                    >\r\n                        Текстовый\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                    selected = {currentTab === 'media'}\r\n                    onClick = {()=>{\r\n                        setActive(false)\r\n                        setTimeout(() => {\r\n                            setCurrentTab('media')\r\n                        }, 80);\r\n                    }}\r\n                    >\r\n                        Медиа\r\n                    </TabsItem>\r\n                    <TabsItem\r\n                    selected = {currentTab === 'paint'}\r\n                    onClick = {()=>{\r\n                        setActive(true)\r\n                        setTimeout(() => {\r\n                            setCurrentTab('paint')\r\n                        }, 80);\r\n                    }}\r\n                    >\r\n                        Рисунок\r\n                    </TabsItem>\r\n                </Tabs>\r\n                {currentTab === 'text' &&\r\n                <Group mode='plain'>\r\n                    <FormLayout>\r\n                        <FormItem top = 'Текстовый автограф' bottom = {`${signValue.length}/1000`}>\r\n                            <Textarea \r\n                            placeholder='Здесь был Павгро' \r\n                            maxLength={1000}\r\n                            onChange={(e)=>setSignValue(e.currentTarget.value)}\r\n                            />\r\n                        </FormItem>\r\n                    </FormLayout>\r\n\r\n                    <Div>\r\n                        <Button disabled = {signValue.length == 0} size='l' sizeY=\"regular\" stretched\r\n                        onClick={post_signature}\r\n                        >Оставить автограф</Button>\r\n                    </Div>\r\n                </Group>\r\n                }\r\n\r\n                {currentTab === 'media' &&\r\n                <Group mode='plain'>\r\n                <div className = 'flexbox_fileinput'>\r\n                <FormLayout>\r\n                    <FormItem top = 'Фотография' bottom = \"Загрузите любую фотографию с вашего устройства\">\r\n                        <File\r\n                        loading={fileLoad}\r\n                        before = {<Icon24PictureOutline />}\r\n                        size = 'l'\r\n                        controlSize=\"l\"\r\n                        accept=\"image/*\"\r\n                        onChange={e=>loadImage(e.currentTarget.files[0])}\r\n                        />\r\n                    </FormItem>\r\n                </FormLayout>\r\n\r\n                <img className = 'preview_image' src = {media} />\r\n\r\n                </div>\r\n\r\n                <Div>\r\n                    <Button disabled = {media == null} size='l' sizeY=\"regular\" stretched\r\n                    onClick={post_signature}\r\n                    >Оставить автограф</Button>\r\n                </Div>\r\n            </Group>\r\n            }\r\n\r\n            {currentTab === 'paint' &&\r\n            <Group>\r\n                <div className=\"canvas_box\">\r\n                    <Paintable \r\n                    className=\"canvas_content\"\r\n                    width={756}\r\n                    height={378}\r\n                    color={color}\r\n                    thickness={thickness}\r\n                    // ref={paintableRef}\r\n                    onSave = {(image)=>{setPaint(image)}}\r\n                    image = {paint}\r\n                    active={active}\r\n                    >\r\n                        <div className='canvas-inner' />\r\n                    </Paintable>\r\n                </div>\r\n                <div className=\"painter_params\">\r\n                    <div className=\"flexbox_paint_item\">\r\n                        <input\r\n                        type='color'\r\n                        defaultValue={color}\r\n                        onChange = {(e)=>setColor(e.currentTarget.value)}\r\n                        />\r\n                        <label>{color}</label>\r\n                    </div>\r\n\r\n                    <div className=\"flexbox_paint_item\">\r\n                        <input \r\n                        type='range'\r\n                        min = {1}\r\n                        max = {30}\r\n                        defaultValue = {thickness}\r\n                        onChange = {e=>{setThickness(e.currentTarget.value)}}\r\n                        />\r\n                        <label>{thickness}</label>\r\n                    </div>\r\n                </div>\r\n\r\n                    <Div>\r\n                        <Button \r\n                        // disabled={paint == null}\r\n                        size='l'\r\n                        sizeY=\"regular\"\r\n                        onClick={()=>{\r\n                            setActive(false)\r\n                            setTimeout(() => {\r\n                                post_signature()\r\n                            }, 80);\r\n                        }}\r\n                        stretched>Оставить автограф</Button>\r\n                    </Div>\r\n            </Group>\r\n            }\r\n\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}","import { Icon56InfoOutline } from \"@vkontakte/icons\"\r\nimport { FormItem, FormLayout, NativeSelect, Panel, PanelHeader, PanelHeaderBack, Group, Placeholder, Button, Div, ScreenSpinner } from \"@vkontakte/vkui\"\r\nimport { useState } from \"react\"\r\nimport { useStorage } from \"../../hook/useStorage\"\r\nimport bridge from '@vkontakte/vk-bridge';\r\nimport { server } from \"../../vars/consts\";\r\n\r\n\r\nexport const Privacy = ({ id }) => {\r\n\r\n    let {\r\n        setActivePanel,\r\n        hideFriendsPlaceholder, setHideFriendsPlaceholder,\r\n        setPopout, defaultParams, setDefaultParams, \r\n        alreadySet, setAlreadySet\r\n    } = useStorage()\r\n\r\n    const [viewmode, setViewMode] = useState(defaultParams?.privacy?.view_mode)\r\n    const [postmode, setPostMode] = useState(defaultParams?.privacy?.post_mode)\r\n\r\n    const buttonTurnoff = () => {\r\n        bridge.send('VKWebAppRemoveFromProfile').then(data=>{\r\n            if(data.result){\r\n                setAlreadySet(false)\r\n            }\r\n        })\r\n    }\r\n\r\n    const openFriendsBridge = () => {\r\n        bridge.send(\"VKWebAppGetFriends\", {multi:true})\r\n        .then(async (data)=>{\r\n            setPopout(<ScreenSpinner size = 'large' />)\r\n            let friends = data.users\r\n            let ids = friends.map(f=>f.id)\r\n            const req = await fetch(`${server}edit_friends`, {method:'POST', body:JSON.stringify(\r\n                {\r\n                    params:window.location.search,\r\n                    ids:ids\r\n                }\r\n            )})\r\n            if(req.ok){\r\n                setHideFriendsPlaceholder(true)\r\n            }\r\n            setPopout(null)\r\n        })\r\n    }\r\n\r\n    const edit_viewmode = async (e) => {\r\n        let mode = e.currentTarget.value\r\n        setViewMode(mode)\r\n        setPopout(<ScreenSpinner size = 'large' />)\r\n        const req = await fetch(`${server}set_privacy`, {method:'POST', body:JSON.stringify(\r\n            {\r\n                params:window.location.search,\r\n                view_mode:mode,\r\n                post_mode:postmode\r\n            }\r\n        )})\r\n\r\n        let local_defaultParams = defaultParams\r\n        console.log(local_defaultParams)\r\n        local_defaultParams.privacy.view_mode = mode\r\n        setDefaultParams(local_defaultParams)\r\n\r\n        setPopout(null)\r\n    }\r\n\r\n    const edit_postmode = async (e) => {\r\n        let mode = e.currentTarget.value\r\n        setPostMode(mode)\r\n        setPopout(<ScreenSpinner size = 'large' />)\r\n        const req = await fetch(`${server}set_privacy`, {method:'POST', body:JSON.stringify(\r\n            {\r\n                params:window.location.search,\r\n                view_mode:viewmode,\r\n                post_mode:mode\r\n            }\r\n        )})\r\n\r\n        let local_defaultParams = defaultParams\r\n        local_defaultParams.privacy.post_mode = mode\r\n        setDefaultParams(local_defaultParams)\r\n\r\n        setPopout(null)\r\n    }\r\n\r\n    return(\r\n        <Panel id = {id}>\r\n            <PanelHeader left = {\r\n                <PanelHeaderBack onClick={()=>setActivePanel('default')}/>\r\n            }>Приватность</PanelHeader>\r\n            <Group>\r\n                <FormLayout>\r\n                    <FormItem top = 'Просмотр ваших автографов'>\r\n                        <NativeSelect value={viewmode} onChange = {edit_viewmode}>\r\n                            <option value = 'all'>Доступно всем</option>\r\n                            <option value = 'friends'>Доступно только друзьям</option>\r\n                            <option value = 'noone'>Доступно только мне</option>\r\n                        </NativeSelect>\r\n                    </FormItem>\r\n                    <FormItem top = 'Создание новых автографов'>\r\n                        <NativeSelect value={postmode} onChange = {edit_postmode}>\r\n                            <option value = 'all'>Доступно всем</option>\r\n                            <option value = 'friends'>Доступно только друзьям</option>\r\n                            <option value = 'noone'>Никому не доступно</option>\r\n                        </NativeSelect>\r\n                    </FormItem>\r\n                </FormLayout>\r\n\r\n                {((viewmode == 'friends' || postmode == 'friends') && !hideFriendsPlaceholder) &&\r\n                <Placeholder\r\n                icon = {<Icon56InfoOutline />}\r\n                header = 'Обновите список своих друзей в приложении'\r\n                action={<Button onClick = {openFriendsBridge} size = 's'>Разрешить доступ к друзьям</Button>}\r\n                >\r\n                    Приложение будет проверять является ли пользовательу вашим другом только по тому списку, который вы нам предоставите\r\n                </Placeholder>\r\n                }\r\n                \r\n                {alreadySet &&\r\n                <Div>\r\n                    <Button stretched size=\"l\">Удалить кнопку из профиля</Button>\r\n                </Div>\r\n                }\r\n            </Group>\r\n        </Panel>\r\n    )\r\n}","import React, { useState, useEffect } from 'react';\nimport bridge from '@vkontakte/vk-bridge';\nimport { View, ScreenSpinner, AdaptivityProvider, AppRoot, ConfigProvider, SplitLayout, SplitCol } from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\n\nimport Home from './panels/Home';\nimport { useStorage } from './hook/useStorage';\nimport { Default } from './panels/Default/Default';\nimport { MySignatures } from './panels/Profile/MySignatures';\nimport { Profile } from './panels/Profile/Profile';\nimport { NewSignature } from './panels/NewSignature/NewSignature';\nimport { Privacy } from './panels/Privacy/Privacy';\n\nconst App = () => {\n\tlet {\n\t\tactivePanel,\n\t\tpopout, setPopout\n\t} = useStorage()\n\tconst [scheme, setScheme] = useState('bright_light')\n\tconst [fetchedUser, setUser] = useState(null);\n\n\tuseEffect(() => {\n\n\t\tbridge.subscribe(({ detail: { type, data }}) => {\n\t\t\tif (type === 'VKWebAppUpdateConfig') {\n\t\t\t  setScheme(data.scheme)\n\t\t\t}\n\t\t  });\n\n\t}, []);\n\n\n\treturn (\n\t\t<ConfigProvider scheme={scheme}>\n\t\t\t<AdaptivityProvider>\n\t\t\t\t<AppRoot>\n\t\t\t\t\t<SplitLayout popout={popout}>\n\t\t\t\t\t\t<SplitCol>\n\t\t\t\t\t\t\t<View activePanel={activePanel}>\n\t\t\t\t\t\t\t\t<Home id='home' />\n\t\t\t\t\t\t\t\t<Default id = 'default'/>\n\t\t\t\t\t\t\t\t<MySignatures id = 'my_signatures'/>\n\t\t\t\t\t\t\t\t<Profile id = 'profile' />\n\t\t\t\t\t\t\t\t<NewSignature id = 'new_signature' />\n\t\t\t\t\t\t\t\t<Privacy id = 'privacy' />\n\t\t\t\t\t\t\t</View>\n\t\t\t\t\t\t</SplitCol>\n\t\t\t\t\t</SplitLayout>\n\t\t\t\t</AppRoot>\n\t\t\t</AdaptivityProvider>\n\t\t</ConfigProvider>\n\t);\n}\n\nexport default App;\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport bridge from \"@vkontakte/vk-bridge\";\nimport App from \"./App\";\nimport StorageProvider from \"./hoc/StorageProvider\";\n\n// Init VK  Mini App\nbridge.send(\"VKWebAppInit\");\n\nReactDOM.render(\n  <StorageProvider>\n    <App />\n  </StorageProvider>\n, document.getElementById(\"root\"));\n\n// if (process.env.NODE_ENV === \"development\") {\n//   import(\"./eruda\").then(({ default: eruda }) => {}); //runtime download\n// }\n"],"sourceRoot":""}